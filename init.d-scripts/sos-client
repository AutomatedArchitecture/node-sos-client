#!/bin/sh
# /etc/init.d/sos-client 

### BEGIN INIT INFO
# Provides:          noip
# Required-Start:    $network $syslog
# Required-Stop:     $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start SoS Client 
# Description:       Start Sos Client https://github.com/AutomatedArchitecture/node-sos-client.
### END INIT INFO


DAEMON_PATH="/opt/sos-client/"
DAEMON="/usr/local/bin/node build/sos-client.js"
NAME="sos-client"
DESC="Siren of Shame Client"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOG=/var/log/sos-client.log

case "$1" in
start)
  printf "%-50s" "Starting $NAME..."
  cd $DAEMON_PATH
  PID=`$DAEMON > $LOG 2>&1 & echo $!`
  #echo "Saving PID" $PID " to " $PIDFILE
  if [ -z $PID ]; then
    printf "%s\n" "Fail"
  else
    echo $PID > $PIDFILE
    printf "%s\n" "OK"
  fi
;;

status)
  printf "%-50s" "Checking $NAME..."
  if [ -f $PIDFILE ]; then
    PID=`cat $PIDFILE`
    if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
      printf "%s\n" "Process dead but pidfile exists"
    else
      echo "Running"
    fi
  else
    printf "%s\n" "Service not running"
  fi
;;

stop)
  printf "%-50s" "Stopping $NAME"
    PID=`cat $PIDFILE`
    cd $DAEMON_PATH
  if [ -f $PIDFILE ]; then
    kill -HUP $PID
    printf "%s\n" "OK"
    rm -f $PIDFILE
  else
    printf "%s\n" "pidfile not found"
  fi
;;

restart)
  $0 stop
  $0 start
;;

*)
  echo "Usage: $0 {status|start|stop|restart}"
  exit 1
esac

